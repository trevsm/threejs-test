{"version":3,"sources":["components/App.js","index.js"],"names":["Box","useBox","mass","position","ref","api","onClick","velocity","set","Math","random","castShadow","attach","color","Plane","usePlane","rotation","PI","receiveShadow","args","App","shadowMap","colorManagement","camera","fov","OrbitControls","Sky","distance","sunPosition","inclination","azimuth","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","softShadows","ReactDom","render","document","querySelector"],"mappings":"uNASA,SAASA,IAAO,IAAD,EACMC,aAAO,iBAAO,CAC/BC,KAAM,EACNC,SAAU,CAAC,EAAG,EAAG,OAHN,mBACNC,EADM,KACDC,EADC,KAKb,OACE,uBACED,IAAKA,EACLE,QAAS,WACPD,EAAIE,SAASC,IAAIC,KAAKC,SAA0B,EAAhBD,KAAKC,SAAe,EAAGD,KAAKC,WAE9DC,YAAU,EALZ,UAOE,mCAAmBC,OAAO,aAC1B,qCAAqBA,OAAO,WAAWC,MAAM,iBAKnD,SAASC,IAAS,IAAD,EACDC,aAAS,iBAAO,CAC5BZ,SAAU,CAAC,EAAG,EAAG,GACjBa,SAAU,EAAEP,KAAKQ,GAAK,EAAG,EAAG,OAFvBb,EADQ,oBAKf,OACE,uBAAMA,IAAKA,EAAKc,eAAa,EAA7B,UACE,qCAAqBN,OAAO,WAAWO,KAAM,CAAC,IAAK,OACnD,qCAAqBP,OAAO,WAAWC,MAAM,kBAKpC,SAASO,IACtB,OACE,eAAC,IAAD,CACEC,WAAS,EACTC,iBAAe,EACfC,OAAQ,CAAEpB,SAAU,EAAE,EAAG,EAAG,GAAIqB,IAAK,IAHvC,UAKE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,SAAU,KACVC,YAAa,CAAC,GAAI,GAAI,IACtBC,YAAa,EACbC,QAAS,MAGX,8BAAcC,UAAW,KACzB,kCACEpB,YAAU,EACVR,SAAU,CAAC,IAAK,EAAG,GACnB4B,UAAW,IACXC,uBAAsB,KACtBC,wBAAuB,KACvBC,oBAAmB,GACnBC,sBAAqB,GACrBC,sBAAqB,GACrBC,oBAAmB,GACnBC,wBAAuB,KAEzB,4BAAYnC,SAAU,CAAC,GAAI,GAAI,GAAI4B,UAAW,MAC9C,eAAC,IAAD,WACE,cAAC/B,EAAD,IACA,cAACc,EAAD,UAjERyB,cCHAC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.5a145897.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { OrbitControls, Sky, softShadows } from 'drei'\r\nimport { Physics, useBox, usePlane } from 'use-cannon'\r\nimport 'minireset.css'\r\nimport './App.css'\r\n\r\nsoftShadows()\r\n\r\nfunction Box() {\r\n  const [ref, api] = useBox(() => ({\r\n    mass: 1,\r\n    position: [0, 3, 0],\r\n  }))\r\n  return (\r\n    <mesh\r\n      ref={ref}\r\n      onClick={() => {\r\n        api.velocity.set(Math.random(), Math.random() * 5 + 3, Math.random())\r\n      }}\r\n      castShadow\r\n    >\r\n      <boxBufferGeometry attach=\"geometry\" />\r\n      <meshLambertMaterial attach=\"material\" color=\"lightblue\" />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nfunction Plane() {\r\n  const [ref] = usePlane(() => ({\r\n    position: [0, 0, 0],\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n  }))\r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n      <meshLambertMaterial attach=\"material\" color=\"lightgreen\" />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Canvas\r\n      shadowMap\r\n      colorManagement\r\n      camera={{ position: [-5, 3, 5], fov: 60 }}\r\n    >\r\n      <OrbitControls/>\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[10, 15, 20]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      {/* <fog attach=\"fog\" args={['white', 0, 40]} /> */}\r\n      <ambientLight intensity={0.4} />\r\n      <directionalLight\r\n        castShadow\r\n        position={[2.5, 8, 5]}\r\n        intensity={1.5}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n      <pointLight position={[0, -10, 0]} intensity={1.5} />\r\n      <Physics>\r\n        <Box />\r\n        <Plane />\r\n      </Physics>\r\n    </Canvas>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDom.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}